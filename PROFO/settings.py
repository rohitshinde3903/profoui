"""
Django settings for PROFO project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "1234"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'profoui.onrender.com', 'profo.pythonanywhere.com', "https://db.abrkaonuipiifisfxyea.supabase.co"]
CSRF_TRUSTED_ORIGINS = ['https://profoui.onrender.com', 'https://profo.pythonanywhere.com', "https://db.abrkaonuipiifisfxyea.supabase.co"]
ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'profoui.onrender.com', 'profo.pythonanywhere.com', "https://db.abrkaonuipiifisfxyea.supabase.co"]
CSRF_TRUSTED_ORIGINS = ['https://profoui.onrender.com', 'https://profo.pythonanywhere.com', "https://db.abrkaonuipiifisfxyea.supabase.co"]



# CSRF_TRUSTED_ORIGINS = ['https://profo.onrender.com']


# Application definition

INSTALLED_APPS = [
    
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    'whitenoise.runserver_nostatic',  # Add this before 'django.contrib.staticfiles'
    "django.contrib.staticfiles",
    'users',
   
    
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = "PROFO.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                'PROFO.context_processors.unread_notifications_count',
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "PROFO.wsgi.application"
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases



#Database configuration using the environment variables
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'postgres',
#         'USER': 'postgres.pztgaorfwakiljcfeknc',
#         'PASSWORD': 'Rohit@09022003',
#         'HOST': 'aws-0-ap-south-1.pooler.supabase.com',
#         'PORT': '5432',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db1.sqlite3'),  # Local fallback.
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

SECRET_KEY = "1234"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True






# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Directory where collected static files will be stored.


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Make sure this is correctly set up for deployment


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = 'users.CustomUser'
# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'stoneswebservices@gmail.com'
EMAIL_HOST_PASSWORD = 'asav ftnn lwyo ekra'  # Use Gmail App Password for security
DEFAULT_FROM_EMAIL = 'stoneswebservices@gmail.com'


SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 3600  # 1 hour
SESSION_SAVE_EVERY_REQUEST = True
LOGIN_URL = '/users/login/'  # Replace with the URL pattern name for your login page



from django.urls import reverse_lazy

LOGIN_REDIRECT_URL = reverse_lazy('password_reset_complete')

# Override the default views
PASSWORD_RESET_CONFIRM_TEMPLATE = 'users/password_reset_confirm.html'
PASSWORD_RESET_COMPLETE_TEMPLATE = 'users/password_reset_complete.html'
